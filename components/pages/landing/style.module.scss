@use '/components/style-shared/_token';

.header {
  position     : relative;
  z-index      : token.$z-lv0;
  overflow     : hidden;
  min-height   : 100vh;
  margin-top   : (- token.$grid-navbar);
  border-bottom: token.$border-line-secondary;
}

.main {
  @include token.grid-col-12-fixed;
  @media (min-width: (token.$bp-desktop--sm + 1)) and (max-width: token.$bp-desktop--md) {
    @include token.grid-col-12-flexible;
    margin-left : token.$grid-margin-12col;
    margin-right: token.$grid-margin-12col;
  }
  @media (min-width: (token.$bp-mobile--lg + 1)) and (max-width: token.$bp-desktop--sm) {
    @include token.grid-col-6-fixed;
  }
  @media (min-width: (token.$bp-mobile--md + 1)) and (max-width: token.$bp-mobile--lg) {
    @include token.grid-col-6-flexible;
    margin-left : token.$grid-margin-6col;
    margin-right: token.$grid-margin-6col;
  }
  @media (min-width: (token.$bp-floor + 1)) and (max-width: token.$bp-mobile--md) {
    @include token.grid-col-4-flexible;
    margin-left : token.$grid-margin-4col;
    margin-right: token.$grid-margin-4col;
  }
}

.hero {
  position      : relative;
  z-index       : (token.$z-lv1);
  grid-column   : 1 / 9;
  display       : flex;
  flex-direction: column;
  align-items   : flex-start;
  gap           : token.$font-leading-body;
  padding-top   : (token.$grid-navbar + token.$font-leading-body * 7);
  padding-bottom: (token.$font-leading-body * 8);

  @media (min-width: token.$bp-tw-2xl) {
    padding-top: (token.$grid-navbar + token.$font-leading-body * 8);
  }

  @media (min-width: (token.$bp-mobile--md + 1)) and (max-width: token.$bp-desktop--sm) {
    grid-column: 1 / 7;
    padding-top: (token.$grid-navbar + token.$font-leading-body * 6);
  }
  @media (min-width: (token.$bp-floor + 1)) and (max-width: token.$bp-mobile--md) {
    grid-column   : 1 / 5;
    padding-top: (token.$grid-navbar + token.$font-leading-body * 4);
  }
  
  pointer-events: none;
  * { pointer-events: auto; }
}

.title {
  font-size  : 54px;
  font-weight: 800;
  line-height: 60px;
  text-wrap  : balance;

  background-image: linear-gradient(
      72deg,
      hsl(240deg, 15%, 15%) 0%,
      hsl(240deg, 15%, 40%) 100%
  );
  background-clip        : text;
  -webkit-text-fill-color: transparent;

  html[class~='dark'] & {
    background-image: linear-gradient(
        72deg,
        rgba(255, 255, 255, 0.75) 0%,
        rgba(255, 255, 255, 0.98) 100%
    );
  }

  @media (min-width: (token.$bp-mobile--lg + 1)) and (max-width: token.$bp-desktop--sm) {
    font-size  : 48px;
    line-height: 54px;
  }
  @media (min-width: (token.$bp-floor + 1)) and (max-width: token.$bp-mobile--lg) {
    max-width  : 480px;
    font-size  : 40px;
    line-height: 48px;
  }
}

.desc {
  @include token.text-headline-rg;
  padding: 0 0 token.$font-leading-body 4px;
  color  : token.$color-ink-secondary;

  @media (min-width: (token.$bp-floor + 1)) and (max-width: token.$bp-mobile--lg) {
    font-size  : 20px;
    line-height: 28px;
  }
}

.button {
  border-color    : hsla(24deg, 100%, 50%, 10%);
  background-color: hsla(24deg, 100%, 50%, 5%);
  color           : token.$color-accent-primary;

  html[class~='dark'] & {
    border-color    : hsla(24deg, 100%, 50%, 25%);
    background-color: hsla(24deg, 100%, 50%, 20%);
  }

  &:hover {
    border-color: hsla(24deg, 100%, 50%, 35%);
    box-shadow:
      0px 0px 32px hsla(24deg, 100%, 50%,  8%),
      0px 0px 16px hsla(24deg, 100%, 50%, 16%),
      0px 0px  8px hsla(24deg, 100%, 50%, 24%),
      0px 0px  2px hsla(24deg, 100%, 50%, 32%);
    text-shadow:
      0px 0px 32px hsla(24deg, 100%, 50%, 16%),
      0px 0px 16px hsla(24deg, 100%, 50%, 12%),
      0px 0px  8px hsla(24deg, 100%, 50%, 8%),
      0px 0px  2px hsla(24deg, 100%, 50%, 4%);
  }

  html[class~='dark'] &:hover {
    border-color: hsla(24deg, 100%, 50%, 50%);
    box-shadow:
      0px 0px 32px hsla(24deg, 100%, 50%,  8%),
      0px 0px 16px hsla(24deg, 100%, 50%, 16%),
      0px 0px  8px hsla(24deg, 100%, 50%, 24%),
      0px 0px  4px hsla(24deg, 100%, 50%, 32%);
    text-shadow:
      0px 0px 32px hsla(24deg, 100%, 50%, 32%),
      0px 0px 16px hsla(24deg, 100%, 50%, 24%),
      0px 0px  8px hsla(24deg, 100%, 50%, 16%),
      0px 0px  2px hsla(24deg, 100%, 50%, 8%);
  }
}

@keyframes aurora-motion {
  0% {
    filter   : hue-rotate(0deg);
    transform: rotate(0deg) translate(0px, 0px) scale(1);
  }
  15% {
    filter   : hue-rotate(0deg);
    transform: rotate(0deg) translate(0px, 0px) scale(1);
  }
  45% {
    filter   : hue-rotate(-144deg);
    transform: rotate(-0.25deg) translate(-2px, -2px) scale(1.0125);
  }
  55% {
    filter   : hue-rotate(-144deg);
    transform: rotate(-0.25deg) translate(-2px, -2px) scale(1.0125);
  }
  85% {
    filter   : hue-rotate(0deg);
    transform: rotate(0deg) translate(0px, 0px) scale(1);
  }
  100% {
    filter   : hue-rotate(0deg);
    transform: rotate(0deg) translate(0px, 0px) scale(1);
  }
}

$aurora-func: linear;
$aurora-dura: 6s;
$aurora-delay: 0.5s;

.aurora {
  position : absolute;
  top      : 0;
  left     : 50%;
  width    : 1200px;
  transform: translate((token.$grid-gutter * -9), (token.$grid-gutter * -9));
  
  @media (min-width: (token.$bp-mobile--md + 1)) and (max-width: token.$bp-desktop--sm) {
    width: 1080px;
    transform: translate((token.$grid-gutter * -8), (token.$grid-gutter * -9));
  }
  @media (min-width: (token.$bp-floor + 1)) and (max-width: token.$bp-mobile--md) {
    width: 972px;
    transform: translate((token.$grid-gutter * -8), (token.$grid-gutter * -10));
  }
}
.aurora svg {
  width          : 100%;
  shape-rendering: optimizeSpeed;

  g {
    cursor          : crosshair;
    transform-origin: top left;
    animation       : aurora-motion $aurora-dura $aurora-func 0s infinite both;
    will-change     : filter;

    @for $i from 1 through 10 {
      &:nth-child(#{$i}) {
        animation-delay: ($aurora-delay * ($i - 1));
      }
    }
  }

  path {
    transform-origin: top left;
    transition      : transform 0.5s ease-out;
    
    &:hover {
      transform: rotate(0.5deg) translate(-4px, -4px) scale(1.0125);
    }
  }
}
